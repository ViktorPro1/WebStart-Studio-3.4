// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ–≤–æ—Ä–æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—ó —Ç–µ–ª–µ—Ñ–æ–Ω—É

(function () {
    'use strict';

    // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—ó
    function createOrientationIndicator() {
        const indicator = document.createElement('div');
        indicator.className = 'orientation-indicator';
        indicator.id = 'orientationIndicator';
        document.body.appendChild(indicator);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
            indicator.classList.add('hidden');
        }, 3000);

        return indicator;
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—ó
    function updateOrientation() {
        const indicator = document.getElementById('orientationIndicator') || createOrientationIndicator();

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏ –∑–º—ñ–Ω—ñ
        indicator.classList.remove('hidden');

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—é
        let isLandscape = false;

        // –°–ø–æ—Å—ñ–± 1: Screen Orientation API (–Ω–∞–π—Å—É—á–∞—Å–Ω—ñ—à–∏–π)
        if (screen.orientation) {
            isLandscape = screen.orientation.type.includes('landscape');
            console.log('üì± –û—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—è (Screen API):', screen.orientation.type);
        }
        // –°–ø–æ—Å—ñ–± 2: window.orientation (—Å—Ç–∞—Ä—ñ—à–∏–π —Å–ø–æ—Å—ñ–±)
        else if (typeof window.orientation !== 'undefined') {
            isLandscape = (window.orientation === 90 || window.orientation === -90);
            console.log('üì± –û—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—è (window.orientation):', window.orientation);
        }
        // –°–ø–æ—Å—ñ–± 3: matchMedia (–∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç)
        else {
            isLandscape = window.matchMedia('(orientation: landscape)').matches;
            console.log('üì± –û—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—è (matchMedia):', isLandscape ? 'landscape' : 'portrait');
        }

        // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å–∏ –¥–æ body
        if (isLandscape) {
            document.body.classList.add('landscape-mode');
            document.body.classList.remove('portrait-mode');
        } else {
            document.body.classList.add('portrait-mode');
            document.body.classList.remove('landscape-mode');
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
            indicator.classList.add('hidden');
        }, 3000);
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    function init() {
        console.log('üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ–ø–æ–≤–æ—Ä–æ—Ç—É...');

        // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
        createOrientationIndicator();

        // –û–Ω–æ–≤–ª—é—î–º–æ –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—é –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
        updateOrientation();

        // –°–ø–æ—Å—ñ–± 1: Screen Orientation API
        if (screen.orientation) {
            screen.orientation.addEventListener('change', () => {
                console.log('üîÑ –ó–º—ñ–Ω–∞ –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—ó (Screen API)');
                updateOrientation();
            });
        }

        // –°–ø–æ—Å—ñ–± 2: orientationchange (–¥–ª—è —Å—Ç–∞—Ä—ñ—à–∏—Ö –±—Ä–∞—É–∑–µ—Ä—ñ–≤)
        window.addEventListener('orientationchange', () => {
            console.log('üîÑ –ó–º—ñ–Ω–∞ –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—ó (orientationchange)');
            updateOrientation();
        });

        // –°–ø–æ—Å—ñ–± 3: resize (–∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç)
        let resizeTimer;
        window.addEventListener('resize', () => {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(() => {
                console.log('üîÑ –ó–º—ñ–Ω–∞ —Ä–æ–∑–º—ñ—Ä—É –µ–∫—Ä–∞–Ω—É');
                updateOrientation();
            }, 100);
        });

        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–ø–æ–≤–æ—Ä–æ—Ç—É –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞!');
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }

})();